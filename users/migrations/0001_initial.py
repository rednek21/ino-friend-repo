# Generated by Django 4.2.1 on 2023-09-20 10:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.CITIES_COUNTRY_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, max_length=30, null=True, verbose_name='username')),
                ('first_name', models.CharField(default='Имя', max_length=30, verbose_name='first_name')),
                ('last_name', models.CharField(default='Фамилия', max_length=30, verbose_name='last_name')),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True, verbose_name='gender')),
                ('password', models.CharField(max_length=100)),
                ('native_language', models.CharField(blank=True, max_length=30, null=True, verbose_name='native_language')),
                ('preferred_language', models.CharField(blank=True, max_length=30, null=True, verbose_name='preferred_language')),
                ('residence_city', models.CharField(blank=True, max_length=128, null=True, verbose_name='residence_city')),
                ('university', models.CharField(blank=True, max_length=100, null=True, verbose_name='university')),
                ('specialty', models.CharField(blank=True, max_length=100, null=True, verbose_name='specialty')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users_images')),
                ('url', models.CharField(blank=True, max_length=64, null=True)),
                ('about_yourself', models.TextField(blank=True, null=True, verbose_name='about_yourself')),
                ('about_yourself_ru', models.TextField(blank=True, null=True, verbose_name='about_yourself')),
                ('about_yourself_en', models.TextField(blank=True, null=True, verbose_name='about_yourself')),
                ('remember_me', models.BooleanField(default=True)),
                ('is_verified_email', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, unique=True)),
                ('title_ru', models.CharField(max_length=32, null=True, unique=True)),
                ('title_en', models.CharField(max_length=32, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'hobby',
                'verbose_name_plural': 'hobbies',
            },
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.UUIDField(unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expiration', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='hobby',
            field=models.ManyToManyField(to='users.hobby'),
        ),
        migrations.AddField(
            model_name='user',
            name='hobby_en',
            field=models.ManyToManyField(null=True, to='users.hobby'),
        ),
        migrations.AddField(
            model_name='user',
            name='hobby_ru',
            field=models.ManyToManyField(null=True, to='users.hobby'),
        ),
        migrations.AddField(
            model_name='user',
            name='native_country',
            field=models.ForeignKey(blank=True, max_length=128, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.CITIES_COUNTRY_MODEL, verbose_name='native_country'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
